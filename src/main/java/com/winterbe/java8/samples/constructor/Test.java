package com.winterbe.java8.samples.constructor;
/**
 * 需求： 定义一个Person类，此类有三个属性分别是姓名  性别和年龄
 *      使用构造方法为其对象进行初始化值。
 * 技能： 认识以及使用构造方法
 * 
 * 1.构造方法的定义
 *    此方法的方法名必须与类名称保持一致，没有具体的返回值类型，而且权限修饰符一般都是public.
 *    定义格式：
 *      权限修饰符    方法名称/类名称(参数列表){
 *          方法体;
 *      }
 * 2.特点（与其他的方法有何不同）
 *    2.1 方法名称必须类名称保持一致。
 *    2.2 没有具体的返回值类型，也不允许出现return语句
 *    2.3 它的权限修饰符可以是公共的，默认的，也可以是私有的。
 *    2.4 构造方法能否重载？ 可以的；构造方法能否重写？不建议重写
 *    2.5 构造方法能否使用static /final等修饰呢？
 * 3.怎麼调用构造方法
 *    3.1 创建对象时，通过new关键字进行调用
 *        例如： Person per = new Person();
 *    3.2 匿名对象--没有名称的对象
 *        new Person(name,age);
 * 4.总结
 *    4.1 在没有使用构造方法之前，为对象的属性进行传值，需要很多个步骤，显得比较麻烦。
 *    4.2 在创建对象的时候，就为对象的属性值初始化呢？能，那就是构造方法！
 *        构造方法的作用： 为对象初始化值而用。
 *    4.3 如果一个类没有明显的继承另外一个类，则默认继承Object，而且JVM会自动分配一个无参构造方法。
 *    4.4 如果自定义了构造方法，那么JVM不会再给一个空参的构造方法了。
 *    4.5 如果成员变量的名称和局部变量的名称发生了重名时，应该使用this关键字来区分。
 *          this.name = name;
 *          
 *          
 *    注意： 
 *      1.在构造方法内，发生成员变量和局部变量名称重名时，不建议写如下格式：
 *          name=name;
 *          age =age;
 *          .........
 *          分析： JVM优先在方法内寻找对应名称的变量，如果不写this进行区分，则建议使用不同名的参数。
 *          例如：
 *            name=name1;
 *            age =age1;
 *            .........
 *    
 *
 */
public class Test {
	public static void main(String[] args) {
		//创建对象
		Person per = new Person();
		//为对象赋值
		per.name="张三";
		per.age=22;
		per.gender='男';
		
		//调用方法
		per.show();
		
		Person per1 = new Person("李四",23,'女');
		per1.show();
	}

}
